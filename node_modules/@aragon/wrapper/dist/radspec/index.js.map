{"version":3,"sources":["../../src/radspec/index.js"],"names":["tryEvaluatingRadspec","intent","wrapper","apps","pipe","toPromise","app","find","proxyAddress","to","appsToSearch","foundMethod","reduce","found","method","data","abi","evaluatedNotice","notice","radspec","evaluate","transaction","ethNode","web3","currentProvider","err","console","error","description","tryDescribingUpdateAppIntent","upgradeIntentParams","appId","appAddress","repoAddress","ens","resolve","repo","version","latestVersion","tryDescribingUpgradeOrganizationBasket","intents","upgradedKnownAppIds","map","filter","knownAppIds","includes","length","from"],"mappings":"qOA0duB;68CA5chB,cAAeA,CAAAA,oBAAf,CAAqCC,MAArC,CAA6CC,OAA7C,CAAsD,MACrDC,CAAAA,IAAI,CAAG,KAAMD,CAAAA,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkB,sBAAlB,EAA2BC,SAA3B,EADwC,CAErDC,GAAG,CAAGH,IAAI,CAACI,IAAL,CAAUD,GAAG,EAAI,0BAAeA,GAAG,CAACE,YAAnB,CAAiCP,MAAM,CAACQ,EAAxC,CAAjB,CAF+C,CAMrDC,YAAY,CAAGJ,GAAG,CAAG,CAACA,GAAD,CAAH,CAAWH,IANwB,CAOrDQ,WAAW,CAAGD,YAAY,CAACE,MAAb,CAAoB,CAACC,KAAD,CAAQP,GAAR,GAAgB,CACtD,GAAIO,KAAJ,CAAa,MAAOA,CAAAA,KAAP,CAEb,KAAMC,CAAAA,MAAM,CAAG,gCAAsBR,GAAtB,CAA2BL,MAAM,CAACc,IAAlC,CAAf,CACA,GAAID,MAAJ,CACE,MAAO,CACLA,MADK,CAELE,GAAG,CAAEV,GAAG,CAACU,GAFJ,CAKV,CAVmB,QAPuC,CAmBrD,CAAEA,GAAF,CAAOF,MAAP,EAAkBH,WAAW,EAAI,EAnBoB,CAqB3D,GAAIM,CAAAA,eAAJ,CACA,GAAIH,MAAM,EAAIA,MAAM,CAACI,MAArB,CACE,GAAI,CACFD,eAAe,CAAG,KAAME,CAAAA,OAAO,CAACC,QAAR,CACtBN,MAAM,CAACI,MADe,CAEtB,CACEF,GADF,CAEEK,WAAW,CAAEpB,MAFf,CAFsB,CAMtB,CAAEqB,OAAO,CAAEpB,OAAO,CAACqB,IAAR,CAAaC,eAAxB,CANsB,CAQzB,CAAC,MAAOC,GAAP,CAAY,CACZC,OAAO,CAACC,KAAR,wEAA8E1B,MAAM,CAACc,IAArF,EAA6FU,GAA7F,CACD,CAGH,wBACKxB,MADL,EAEE2B,WAAW,CAAEX,eAFf,EAID,CAED;;;;;;GAOO,cAAeY,CAAAA,4BAAf,CAA6C5B,MAA7C,CAAqDC,OAArD,CAA8D,CACnE,KAAM4B,CAAAA,mBAAmB,CAAG,CAAC,KAAM,8CAAiC,CAAC7B,MAAD,CAAjC,CAA2CC,OAA3C,CAAP,EAA4D,CAA5D,CAA5B,CACA,GAAI,CAAC4B,mBAAL,CAA0B,OAFyC,KAI7D,CAAEC,KAAF,CAASC,UAAT,EAAwBF,mBAJqC,CAM7DG,WAAW,CAAG,KAAM/B,CAAAA,OAAO,CAACgC,GAAR,CAAYC,OAAZ,CAAoBJ,KAApB,CANyC,CAO7DK,IAAI,CAAG,wBAAcH,WAAd,CAA2B/B,OAAO,CAACqB,IAAnC,CAPsD,CAQ7D,CAAEc,OAAO,CAAEC,aAAX,EAA6B,KAAM,0CAAgCF,IAAhC,CAAsCJ,UAAtC,CAR0B,CAKnE;AAKA,wBACK/B,MADL,EAEE2B,WAAW,mBAAaG,KAAb,+BAAwCO,aAAxC,CAFb,EAID,CAED;;;;;;GAOO,cAAeC,CAAAA,sCAAf,CAAuDC,OAAvD,CAAgEtC,OAAhE,CAAyE,CAC9E,KAAMuC,CAAAA,mBAAmB,CAAG,CAAC,KAAM,8CAAiCD,OAAjC,CAA0CtC,OAA1C,CAAP,EACzBwC,GADyB,CACrB,CAAC,CAAEX,KAAF,CAAD,GAAeA,KADM,CAE1B;AAF0B,CAGzBY,MAHyB,CAIxBZ,KAAK,EAAIa,kBAAYC,QAAZ,CAAqBd,KAArB,CAJe,CAA5B,CAOA,GACE;AACAS,OAAO,CAACM,MAAR,GAAmBL,mBAAmB,CAACK,MAAvC,EACA;AACAF,kBAAYE,MAAZ,GAAuBL,mBAAmB,CAACK,MAJ7C,CAME,MAAO,CACLlB,WAAW,CAAE,2CADR,CAELmB,IAAI,CAAEP,OAAO,CAAC,CAAD,CAAP,CAAWO,IAFZ,CAGLtC,EAAE,CAAE+B,OAAO,CAAC,CAAD,CAAP,CAAW/B,EAHV,CAMV","sourcesContent":["import { first } from 'rxjs/operators'\nimport * as radspec from 'radspec'\nimport { getRepoLatestVersionForContract, makeRepoProxy } from '../core/apm/repo'\nimport { addressesEqual } from '../utils'\nimport { findAppMethodFromData, knownAppIds } from '../utils/apps'\nimport { filterAndDecodeAppUpgradeIntents } from '../utils/intents'\n\n/**\n * Attempt to describe intent via radspec.\n *\n * @param  {Object} intent transaction intent\n * @param  {Object} wrapper\n * @return {Promise<Object>} Decorated intent with description, if one could be made\n */\nexport async function tryEvaluatingRadspec (intent, wrapper) {\n  const apps = await wrapper.apps.pipe(first()).toPromise()\n  const app = apps.find(app => addressesEqual(app.proxyAddress, intent.to))\n\n  // If the intent matches an installed app, use only that app to search for a\n  // method match, otherwise fallback to searching all installed apps\n  const appsToSearch = app ? [app] : apps\n  const foundMethod = appsToSearch.reduce((found, app) => {\n    if (found) { return found }\n\n    const method = findAppMethodFromData(app, intent.data)\n    if (method) {\n      return {\n        method,\n        abi: app.abi\n      }\n    }\n  }, undefined)\n\n  const { abi, method } = foundMethod || {}\n\n  let evaluatedNotice\n  if (method && method.notice) {\n    try {\n      evaluatedNotice = await radspec.evaluate(\n        method.notice,\n        {\n          abi,\n          transaction: intent\n        },\n        { ethNode: wrapper.web3.currentProvider }\n      )\n    } catch (err) {\n      console.error(`Could not evaluate a description for given transaction data: ${intent.data}`, err)\n    }\n  }\n\n  return {\n    ...intent,\n    description: evaluatedNotice\n  }\n}\n\n/**\n * Attempt to describe a setApp() intent. Only describes the APP_BASE namespace.\n *\n * @param  {Object} intent transaction intent\n * @param  {Object} wrapper\n * @return {Promise<Object>} Decorated intent with description, if one could be made\n */\nexport async function tryDescribingUpdateAppIntent (intent, wrapper) {\n  const upgradeIntentParams = (await filterAndDecodeAppUpgradeIntents([intent], wrapper))[0]\n  if (!upgradeIntentParams) return\n\n  const { appId, appAddress } = upgradeIntentParams\n  // Fetch aragonPM information\n  const repoAddress = await wrapper.ens.resolve(appId)\n  const repo = makeRepoProxy(repoAddress, wrapper.web3)\n  const { version: latestVersion } = await getRepoLatestVersionForContract(repo, appAddress)\n\n  return {\n    ...intent,\n    description: `Upgrade ${appId} app instances to v${latestVersion}`\n  }\n}\n\n/**\n * Attempt to parse a complete organization upgrade intent\n *\n * @param  {Array<Object>} intents intent basket\n * @param  {Object} wrapper\n * @return {Promise<Object>} Decorated intent with description, if one could be made\n */\nexport async function tryDescribingUpgradeOrganizationBasket (intents, wrapper) {\n  const upgradedKnownAppIds = (await filterAndDecodeAppUpgradeIntents(intents, wrapper))\n    .map(({ appId }) => appId)\n    // Take intersection with knownAppIds\n    .filter(\n      appId => knownAppIds.includes(appId)\n    )\n\n  if (\n    // All intents are for upgrading known apps\n    intents.length === upgradedKnownAppIds.length &&\n    // All known apps are being upgraded\n    knownAppIds.length === upgradedKnownAppIds.length\n  ) {\n    return {\n      description: 'Upgrade organization to Aragon 0.8 Camino',\n      from: intents[0].from,\n      to: intents[0].to\n    }\n  }\n}\n\nexport { postprocessRadspecDescription } from './postprocess'\n"],"file":"index.js"}