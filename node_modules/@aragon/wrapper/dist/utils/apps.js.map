{"version":3,"sources":["../../src/utils/apps.js"],"names":["apmAppId","appName","findAppMethodFromData","app","data","functions","methodId","substring","find","method","sig","knownAppIds"],"mappings":"iEA0duB;6KAvdhB,KAAMA,CAAAA,QAAQ,CAAGC,OAAO,EAAI,mCAAYA,OAAZ,kBAA5B,CAEP;;;;;;;6BAQO,QAASC,CAAAA,qBAAT,CAAgCC,GAAhC,CAAqCC,IAArC,CAA2C,CAChD,GAAID,GAAG,EAAIA,GAAG,CAACE,SAAf,CAA0B,CACxB;AACA,KAAMC,CAAAA,QAAQ,CAAGF,IAAI,CAACG,SAAL,CAAe,CAAf,CAAkB,EAAlB,CAAjB,CACA,MAAOJ,CAAAA,GAAG,CAACE,SAAJ,CAAcG,IAAd,CACJC,MAAD,EAAY,qBAAUA,MAAM,CAACC,GAAjB,EAAsBH,SAAtB,CAAgC,CAAhC,CAAmC,CAAnC,IAA0CD,QADjD,CAGR,CACF,CAEM,KAAMK,CAAAA,WAAW,CAAG,CACzBX,QAAQ,CAAC,SAAD,CADiB,CAEzBA,QAAQ,CAAC,eAAD,CAFiB,CAGzBA,QAAQ,CAAC,OAAD,CAHiB,CAIzBA,QAAQ,CAAC,QAAD,CAJiB,CAApB,C","sourcesContent":["import { hash as namehash } from 'eth-ens-namehash'\nimport { keccak256 } from 'js-sha3'\n\nexport const apmAppId = appName => namehash(`${appName}.aragonpm.eth`)\n\n/**\n * Find the method descriptor corresponding to the data component of a\n * transaction sent to `app`.\n *\n * @param  {Object} app App artifact\n * @param  {Object} data Data component of a transaction to app\n * @return {Object} Method with radspec notice and function signature\n */\nexport function findAppMethodFromData (app, data) {\n  if (app && app.functions) {\n    // Find the method\n    const methodId = data.substring(2, 10)\n    return app.functions.find(\n      (method) => keccak256(method.sig).substring(0, 8) === methodId\n    )\n  }\n}\n\nexport const knownAppIds = [\n  apmAppId('finance'),\n  apmAppId('token-manager'),\n  apmAppId('vault'),\n  apmAppId('voting')\n]\n"],"file":"apps.js"}